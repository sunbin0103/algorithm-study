1. 선택정렬
- ‘제자리(in-place)’ 정렬 알고리즘.
- 키에 의해 필요할 때만 교환된다.

2. 장점
- 구현이 쉽다.
- 제자리 정렬로, 부가적 저장 공간이 필요 없다.

3. 단점
- 확장성이 좋지 않다.
- 같은 값이 있을 경우, 상대적 위치가 변경될 수 있다.

4. 알고리즘
(1) 리스트에서 최소값을 찾는다.
(2) 현재 위치 값과 교환한다.
(3) 전체 배열이 정렬될 때까지 이 과정을 모든 항목에 대해 반복한다.

ex) { 5, 2, 8, 4, 6, 9 }
1회전: 5 2 8 4 6 9 > 2 5 8 4 6 9
2회전: 2 5 8 4 6 9 > 2 4 8 5 6 9
3회전: 2 4 8 5 6 9 > 2 4 5 8 6 9
4회전: 2 4 5 8 6 9 > 2 4 5 6 8 9
5회전: 2 4 5 6 8 9 > 2 4 5 6 8 9
 
5. 코드
/* Selection Sort */
for (int i = 0; i < iN; ++i)
{
	int iMin = i;

	for (int j = i; j < iN; ++j)
	{
		if (arrNum[iMin] > arrNum[j])
		{
			iMin = j;
		}
	}

	int iTemp = arrNum[iMin];
	arrNum[iMin] = arrNum[i];
	arrNum[i] = iTemp;
}

6. 시간 복잡도
Worst	O(n^2)
Best	O(n)
Avg	O(n^2)

7. 참고
- 다양한 예제로 학습하는 데이터 구조와 알고리즘
